<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <ServerGarbageCollection>true</ServerGarbageCollection>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="AWSSDK.S3" Version="3.7.301" />
    <PackageReference Include="BCrypt.Net-Next" Version="4.0.3" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="8.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="8.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="3.1.32" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="8.0.0" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="5.2.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="8.0.0" />
    <PackageReference Include="MongoDB.Bson" Version="2.22.0" />
    <PackageReference Include="MongoDB.Driver" Version="2.22.0" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
    <PackageReference Include="SixLabors.ImageSharp" Version="3.0.2" />
  </ItemGroup>
  
  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>
  
  <ItemGroup>
    <None Remove="ClientApp\src\common\ContentFile.ts" />
    <None Remove="ClientApp\src\common\DateFormatter.ts" />
    <None Remove="ClientApp\src\components\Register.vue" />
    <None Remove="ClientApp\src\components\Registered.vue" />
    <None Remove="ClientApp\src\components\Reports\ReportFilterTypes.ts" />
    <None Remove="ClientApp\src\content-creation\html-elements.ts" />
    <None Remove="ClientApp\src\content-creation\TagsProvider.ts" />
    <None Remove="ClientApp\src\ConversationMessage.ts" />
    <None Remove="ClientApp\src\services\ApiClient.ts" />
    <None Remove="ClientApp\src\services\AuthService.ts" />
    <None Remove="ClientApp\src\services\MarkReadMessagesQueue.ts" />
    <None Remove="ClientApp\src\services\siteContextManager.ts" />
    <None Remove="ClientApp\src\services\UserNotificationService.ts" />
  </ItemGroup>
  
  <ItemGroup>
    <ProjectReference Include="..\Avs.StaticSiteHosting.ContentCreator\Avs.StaticSiteHosting.ContentCreator.csproj" />
    <ProjectReference Include="..\Avs.StaticSiteHosting.Reports\Avs.StaticSiteHosting.Reports.csproj" />
  </ItemGroup>
  
  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\components\Register.vue" />
    <TypeScriptCompile Include="ClientApp\src\components\Registered.vue" />
    <TypeScriptCompile Include="ClientApp\src\services\AuthService.ts" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="appsettings.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="BuildDashboardApp" AfterTargets="Build">
    <Message Importance="high" Text="Start running npm install and build..." />

    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build --prod" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>Always</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>

    <Message Importance="high" Text="Dist files:" />
    <Message Importance="high" Text="@(DistFiles->'%(FullPath)')" />

    <Message Importance="high" Text="Relative path: " />
    <Message Importance="high" Text="%(DistFiles.Identity)" />

  </Target>
</Project>